name: Release

on:
  push:
    tags:
      - 'v*'
      - '*.*.*'

jobs:
  unit-tests:
    uses: ./.github/workflows/unit-tests.yml

  publish-artifacts:
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Derive version from tag
        id: version
        run: |
          RAW_TAG="${GITHUB_REF_NAME}"
          VERSION="${RAW_TAG#v}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Publishing version $VERSION"

      - name: Publish to Central Portal
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_TOKEN: ${{ secrets.MAVEN_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          DEEP_MATCH_VERSION: ${{ steps.version.outputs.version }}
        run: |
          ./gradlew \
            apiCheck \
            publishAggregationToCentralPortal \
            -Pdeep.match.version=${DEEP_MATCH_VERSION} \
            --no-daemon

  publish-gradle-plugin:
    runs-on: ubuntu-latest
    needs: publish-artifacts
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Derive version from tag
        id: version
        run: |
          RAW_TAG="${GITHUB_REF_NAME}"
          VERSION="${RAW_TAG#v}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Publishing Gradle plugin version $VERSION"

      - name: Publish Gradle plugin
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          DEEP_MATCH_VERSION: ${{ steps.version.outputs.version }}
        run: |
          ./gradlew \
            :deepmatch-plugin:publishPlugins \
            -Pdeep.match.version=${DEEP_MATCH_VERSION} \
            --no-daemon
